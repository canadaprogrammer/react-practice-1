{"version":3,"sources":["components/Movies.js","routes/Home.js","components/Movie.js","routes/Detail.js","App.js","index.js"],"names":["Movies","id","coverImg","title","year","rating","summary","genres","src","alt","to","map","genre","Home","useState","loading","setLoading","movies","setMovies","getMovies","a","fetch","json","data","console","log","useEffect","className","length","movie","medium_cover_image","Movie","reduce","b","Detail","useParams","setMovie","getMovie","description_full","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOA+BeA,MA5Bf,YAAyE,IAAvDC,EAAsD,EAAtDA,GAAIC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OAC5D,OACE,gCACE,qBAAKC,IAAKN,EAAUO,IAAKN,IACzB,6BACE,eAAC,IAAD,CAAMO,GAAE,iBAAYT,GAApB,UACGE,EADH,KACYC,EADZ,OACsBC,OAGxB,4BAAIC,IACJ,6BACGC,EAAOI,KAAI,SAACC,GAAD,OACV,6BAAiBA,GAARA,YC+BJC,MA3Cf,WACE,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAS,uCAAG,4BAAAC,EAAA,sEAERC,MACJ,4FAHY,8BAKdC,OALc,OACVA,EADU,OAMhBJ,EAAUI,EAAKC,KAAKN,QACpBD,GAAW,GACXQ,QAAQC,IAAIH,EAAKC,KAAKN,QARN,2CAAH,qDAcf,OAJAS,qBAAU,WACRP,MACC,IAGD,sBAAKQ,UAAU,MAAf,UACE,yCAAYZ,EAAU,KAAOE,EAAOW,UACnCb,EACC,4CAEA,8BACGE,EAAON,KAAI,SAACkB,GAAD,OACV,cAAC,EAAD,CAEE5B,GAAI4B,EAAM5B,GACVC,SAAU2B,EAAMC,mBAChB3B,MAAO0B,EAAM1B,MACbG,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMtB,OACdH,KAAMyB,EAAMzB,KACZC,OAAQwB,EAAMxB,QAPTwB,EAAM5B,aCIV8B,MAhCf,YAAoE,IAAnD7B,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OACvD,OACE,gCACE,6BAAKJ,IACL,8BACE,qBAAKK,IAAKN,EAAUO,IAAKN,MAE3B,8BACE,2CADF,IAC0BC,KAE1B,8BACE,kDADF,IACiCE,KAEjC,8BACE,6CADF,IAC4BD,KAE5B,8BACE,8CACCE,EAAOyB,QAAO,SAACZ,EAAGa,GAAJ,gBAAab,EAAb,aAAmBa,aCgB3BC,MAhCf,WACE,IAAQjC,EAAOkC,cAAPlC,GACR,EAA8Ba,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,qBAA1B,mBAAOe,EAAP,KAAcO,EAAd,KACMC,EAAQ,uCAAG,4BAAAjB,EAAA,sEAEPC,MAAM,qDAAD,OAAsDpB,IAFpD,8BAGbqB,OAHa,OACTA,EADS,OAIfc,EAASd,EAAKC,KAAKM,OACnBb,GAAW,GALI,2CAAH,qDAUd,OAHAU,qBAAU,WACRW,MACC,IAED,8BACGtB,EACC,4CAEA,cAAC,EAAD,CACEb,SAAU2B,EAAMC,mBAChB3B,MAAO0B,EAAM1B,MACbG,QAASuB,EAAMS,iBACf/B,OAAQsB,EAAMtB,OACdH,KAAMyB,EAAMzB,KACZC,OAAQwB,EAAMxB,YCbTkC,MAXf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,YCN1CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1c7c554c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Movies({ id, coverImg, title, year, rating, summary, genres }) {\r\n  return (\r\n    <div>\r\n      <img src={coverImg} alt={title} />\r\n      <h2>\r\n        <Link to={`/movie/${id}`}>\r\n          {title} ({year}) - {rating}\r\n        </Link>\r\n      </h2>\r\n      <p>{summary}</p>\r\n      <ul>\r\n        {genres.map((genre) => (\r\n          <li key={genre}>{genre}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovies.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  coverImg: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\nexport default Movies;\r\n","import { useState, useEffect } from 'react';\r\nimport Movies from '../components/Movies';\r\n\r\nfunction Home() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const getMovies = async () => {\r\n    const json = await (\r\n      await fetch(\r\n        'https://yts.mx/api/v2/list_movies.json?minimum_rating=8.5&sort_by=rating&limit=20&page=1'\r\n      )\r\n    ).json();\r\n    setMovies(json.data.movies);\r\n    setLoading(false);\r\n    console.log(json.data.movies);\r\n  };\r\n  useEffect(() => {\r\n    getMovies();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1>Movies {loading ? null : movies.length}</h1>\r\n      {loading ? (\r\n        <h2>Loading...</h2>\r\n      ) : (\r\n        <div>\r\n          {movies.map((movie) => (\r\n            <Movies\r\n              key={movie.id}\r\n              id={movie.id}\r\n              coverImg={movie.medium_cover_image}\r\n              title={movie.title}\r\n              summary={movie.summary}\r\n              genres={movie.genres}\r\n              year={movie.year}\r\n              rating={movie.rating}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Movie({ coverImg, title, year, rating, summary, genres }) {\r\n  return (\r\n    <div>\r\n      <h1>{title}</h1>\r\n      <div>\r\n        <img src={coverImg} alt={title} />\r\n      </div>\r\n      <p>\r\n        <strong>Year:</strong> {year}\r\n      </p>\r\n      <p>\r\n        <strong>Description:</strong> {summary}\r\n      </p>\r\n      <p>\r\n        <strong>Rating:</strong> {rating}\r\n      </p>\r\n      <p>\r\n        <strong>Genres: </strong>\r\n        {genres.reduce((a, b) => `${a}, ${b}`)}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  coverImg: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  rating: PropTypes.number.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\nexport default Movie;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Movie from '../components/Movie';\r\n\r\nfunction Detail() {\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState(true);\r\n  const [movie, setMovie] = useState();\r\n  const getMovie = async () => {\r\n    const json = await (\r\n      await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\r\n    ).json();\r\n    setMovie(json.data.movie);\r\n    setLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    getMovie();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <Movie\r\n          coverImg={movie.medium_cover_image}\r\n          title={movie.title}\r\n          summary={movie.description_full}\r\n          genres={movie.genres}\r\n          year={movie.year}\r\n          rating={movie.rating}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './routes/Home';\nimport Detail from './routes/Detail';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path='/' element={<Home />}></Route>\n        <Route path='/movie/:id' element={<Detail />}></Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}